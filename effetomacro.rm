#include "general.rm"

#include "callmacro.rm"

#include "verifica.rm"

#include "macrovalorizzata.rm"



ef_macroheader[newmacro] : " Macro di effetto  " newmacro efmacro_args;

ef_createmacro[header,newmacroname,type,globalv,Enum,globalmheader,TotalV,ef_macroefheader,TotalEnum]: printglo[" /*[*/"]  (ef_header=removerheaded[header]) ef_header "\n" "{" ef_mbody[header,newmacroname,type,globalv,Enum,globalmheader,TotalV,ef_macroefheader,TotalEnum] "\n" "}" "\n" printglo[" /*],*/"]  ;



ef_mbody[header,newmacroname,type,globalv,Enum,globalmheader,TotalV,ef_macroefheader,TotalEnum]: ((e1=ef_shart[header,globalv,Enum,globalmheader,TotalV,TotalEnum] 
 dastor[globalv,Enum,ef_macroefheader,TotalV]  )  e1  (d=dastor[globalv,Enum,ef_macroefheader,TotalV]) (da=funcdastor[e1,d,d]) da  "\n" )+ ; 


ef_shart[header,globalv,Enum,globalmheader,TotalV,TotalEnum] :  (sart[" ",header,globalv,Enum,globalmheader,TotalV,TotalEnum] );



dastor[globalv,Enum,ef_macroefheader,TotalV]: ((c=comando[globalv,Enum]) (v=variable[globalv,Enum]) (t=timer[globalv,Enum]) (co=conta[globalv,Enum]) (lt=listtimer[globalv,Enum,TotalV]) (f=fmacrof[globalv,Enum,ef_macroefheader]) (lc=listconta[globalv,Enum,TotalV]) (lv=listvariable[globalv,Enum,TotalV])
(se=selectonofthem[c,v,t,co,lt,lc,lv,f])  se) "\n""\n" ;




selectonofthem[c,v,t,co,lt,lc,lv,f]:
{
var index=Number(Math.floor(Math.random() * (8)));

if (index===0)
{
if (c.search("_comando_")>=0)
{return c}
else
{return t};
}
if (index===1)
{return v;}
if (index===2)
{return t;}
if (index===3)
{return co;}
if (index===4)
{
if (lt.search("_lista_")>=0)
{return lt}
else
{return t};
}

if (index===5)
{
if (lc.search("_lista_")>=0)
{return lc}
else
{return t};
}

if (index===6)
{
if (lv.search("_lista_")>=0)
{return lv}
else
{return t};
}

return f;
};

efarg_Num:& "af1","af2","af3","af4","af5","af6","af7","af8","af9","af10";


efmacro_args: (" ", ef_arg);


ef_arg: "( con  " (coneftype,conefbool){1} ( (eftype,efbool){1})*  (" e " coneftype) ")";

eftyperule: "Enumerator_"randomname[Num_Of_Types] ;

eftype: ", argomento_"efarg_Num "  di tipo "eftyperule ;
efbool: ", argomento_"efarg_Num "  di tipo booleano" ;

coneftype: "argomento_"efarg_Num "  di tipo "eftyperule ;
conefbool: "argomento_"efarg_Num "  di tipo booleano" ;



comando[globalv,Enum]:   " Assegna al comando "  (coma=select_randomly_a_coma[globalv]) coma " il valore " (tc=type_of_variable[globalv,coma]) (s=samplevalueoftypes[Enum,tc]) s printglo[" /*38,*/"];

variable[globalv,Enum]: (va=  " Assegna alla variabile "  (varr=select_randomly_a_var[globalv]) varr " il valore " (tv=type_of_variable[globalv,varr]) (s=samplevalueoftypes[Enum,tv]) s) (v=pulishvaifhasfa[va])  v printglo[" /*39,*/"];

listvariable[globalv,Enum,TotalV]: (Li=select_randomly_a_list[globalv,TotalV]) (tyl=(type_of_variable[globalv,Li])) (ty=Class_of_List[globalv,tyl])     (gl=globalvofthisclass[TotalV,ty,globalv]) (EnumLo=globalvofthisclass[TotalEnum,ty,Enum]) listvareffect[gl,EnumLo,Li,globalv,TotalV]  ;

listvareffect[glo,Enum,Li,globalv,TotalV]:  " Assegna a " (varr=select_randomly_a_var[glo]) varr (tyl=(type_of_variable[globalv,Li])) (ty=Class_of_List[globalv,tyl]) " del campo " ty " di " Li  " il valore " (vt=type_of_variable[glo,varr])      
(sa=samplevalueoftypes[Enum,vt])   (res=select_unempty_one[sa,"","","",""]) res mainquandopart[header,glo,Enum,globalmheader," è ",TotalV,Li] printglo[" /*119,*/"] ;


timer[globalv,Enum]:  (ope=( "/*,*/Attiva", "Disattiva")) ope " il timer " (ti=select_randomly_a_timer[globalv]) ti (nn=effnum[ope]) nn ; 


listtimer[globalv,Enum,TotalV]: (Li=select_randomly_a_list[globalv,TotalV]) (tyl=(type_of_variable[globalv,Li])) (ty=Class_of_List[globalv,tyl])     (gl=globalvofthisclass[TotalV,ty,globalv]) (EnumLo=globalvofthisclass[TotalEnum,ty,Enum]) listtimereffect[gl,EnumLo,Li,globalv,TotalV] ;



listtimereffect[glo,Enum,Li,globalv,TotalV]:  (ope=( " Attiva ", " Disattiva ")) ope (varr=select_randomly_a_timer[glo]) varr (tyl=(type_of_variable[globalv,Li]))    (ty=Class_of_List[globalv,tyl]) " del campo "  ty " di " Li  mainquandopart[header,glo,Enum,globalmheader," è ",TotalV,Li]  printglo[" /*117,*/"];

mainquandopart[header,gl,LoEnum,globalmheader,SiaOrS,TotalV,Li]:( quandopart[header,gl,LoEnum,globalmheader,SiaOrS,TotalV,Li]," " 5);

quandopart[header,gl,LoEnum,globalmheader,SiaOrS,TotalV,Li]: ","  " quando " (el=elemlistha[" ",header,gl,LoEnum,globalmheader,SiaOrS,TotalV,IsFirstCo,Li])  (quandoitem=Replacelistwithrecord[el,Li,ty]) quandoitem>" esiste e " % ("") printglo[" /*88,*/"];




conta[globalv,Enum]:  (ope=( "Incrementa", "Decrementa", "Azzera")) ope " il contatore " (cont=select_randomly_a_contan[globalv]) cont (nn=effnum[ope]) nn; 

listconta[globalv,Enum,TotalV]: (Li=select_randomly_a_list[globalv,TotalV]) (tyl=(type_of_variable[globalv,Li])) (ty=Class_of_List[globalv,tyl])     (gl=globalvofthisclass[TotalV,ty,globalv]) (EnumLo=globalvofthisclass[TotalEnum,ty,Enum]) listcontaeffect[gl,EnumLo,Li,globalv,TotalV]  ;

listcontaeffect[gl,EnumLo,Li,globalv,TotalV]:  (ope=( " Incrementa ", " Decrementa ", " Azzera ")) ope (conta=select_randomly_a_contan[gl]) conta (tyl=(type_of_variable[globalv,Li])) (ty=Class_of_List[globalv,tyl]) " del campo " ty " di " Li  mainquandopart[header,gl,EnumLo,globalmheader," è ",TotalV,Li] printglo[" /*118,*/"]; 



fmacrof[globalv,Enum,globalmheader]:   " " (s=ef_contextmacro[globalmheader,Enum,argoper,operatorha," è "]) (v=variable[globalv,Enum]) (f=finalte[s,v]) f>/se // ;


effnum[s]:{
if (s.search("/*,*/Attiva")>=0)
{
return " /*40,*/";
}
else if (s.search("Disattiva")>=0)
{
return " /*41,*/";
}
else if (s.search("Incrementa")>=0)
{
return " /*42,*/";
}
else if (s.search("Decrementa")>=0)
{
return " /*43,*/";
}
else if (s.search("Azzera")>=0)
{
return " /*44,*/";
}

else
{
return s;
}

};



finalte[s,v]:{
if (s.search("ConsDef")>=0)
{
return v;
}
else
{
return s+" /*45,*/";
}
};


argoper:" non"?;

select_randomly_a_coma[textstr]:
{
var lastelements="";
texts=textstr.split(",");
num=textstr.split(",").length;

for (i = 1; i < num; i++) 
{
recs=texts[i].split(":");

 
if (recs[0].search("comando")>=0)
{
lastelements=recs[0];
var index=Number(Math.floor(Math.random() * (2)));

if (index>0)
return recs[0];

}

}

return lastelements;

};

dastfunctio[das,defdas]:{
if (das.length>2)
{return das;}
else
{return defdas;}
};

funcdastor[e,d,defda]:
{
if (e.length>5)
{
var index=Number(Math.floor(Math.random() * (2)));

if (index>0)
{
if (d.length>5)
{return " ,altrimenti "+ d;
}
else
{return " ,altrimenti " +defda;
}

}
else
{
return "   ";
}
}
return "   ";
}
;

	